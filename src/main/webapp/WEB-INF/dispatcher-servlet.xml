<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringModelInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--指明 controller 所在包，并扫描其中的注解-->
    <context:component-scan base-package="com.ch.controller" />
    <context:component-scan base-package="com.ch.DAO"/>
    <context:component-scan base-package="com.ch.utils" />
    <!-- 静态资源(js/image)的访问 -->
    <mvc:resources mapping="/resource/image/**" location="/resource/image/" />
    <mvc:resources mapping="/resource/userpicture/**" location="/resource/userpicture/" />
    <!-- 开启注解 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--ViewResolver 视图解析器-->
    <!--用于支持Servlet、JSP视图解析-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <mvc:default-servlet-handler/>
    <!-- 事务管理 -->
    <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!--<property name="url" value="jdbc:mysql://localhost:3306/qqchat" />-->
        <property name="url" value="jdbc:mysql://182.254.152.99:3306/qqchat" />
        <!--<property name="username" value="root"/>-->
        <property name="username" value="cheng"/>
        <!--<property name="password" value="689571"/>-->
        <property name="password" value="CHENGhengok.1314"/>
        <!-- 数据库连接池保持的最小连接数 -->
        <property name="minIdle" value="5"/>
        <!-- 数据库连接池保持的最大连接数 -->
        <property name="maxIdle" value="30"/>
        <!--
            当数据库连接因为某种原因断掉之后，再重新从连接池中拿另外一个连接时实际上这个连接可能
            已经无效，所以为了确保所拿到的连接全都有效需要在获取连接，返回连接以及连接空闲时进行
            有效性验证 下面3个设置为ture时进行验证，默认为false
         -->
        <!-- 取得连接时是否进行有效性验证 -->
        <property name="testOnBorrow" value="true"/>
        <!-- 返回连接时是否进行有效性验证 -->
        <property name="testOnReturn" value="true"/>
        <!-- 连接空闲时是否进行有效性验证 -->
        <property name="testWhileIdle" value="true"/>
    </bean>

    <!-- 设置Hibernate sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <property name="packagesToScan" value="com.ch.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.transaction.coordinator_class">jdbc</prop>
            </props>
        </property>
    </bean>
    <!-- 设置Spring事务 -->
    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--启动spring事务注解功能-->
    <tx:annotation-driven transaction-manager="txManager"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
</beans>